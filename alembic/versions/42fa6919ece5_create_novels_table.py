"""create novels table

Revision ID: 42fa6919ece5
Revises: 
Create Date: 2025-09-30 15:14:48.901327

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '42fa6919ece5'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('novels',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('other_titles', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('authors', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('artists', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('meta', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_novels_id'), 'novels', ['id'], unique=True)
    op.create_index(op.f('ix_novels_title'), 'novels', ['title'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_novels_title'), table_name='novels')
    op.drop_index(op.f('ix_novels_id'), table_name='novels')
    op.drop_table('novels')
    # ### end Alembic commands ###
